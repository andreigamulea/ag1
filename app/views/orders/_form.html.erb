<style>
.dropdown-menu {
  border: 1px solid #ccc;
  background-color: white;
  max-height: 200px;
  overflow-y: auto;
  position: absolute;
  z-index: 1000;
  width: 100%;
}
.dropdown-item {
  padding: 8px;
  cursor: pointer;
}
.dropdown-item:hover {
  background-color: #f0f0f0;
}
.row {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  margin-bottom: 10px;
}
.col {
  flex: 1;
  min-width: 200px;
}
</style>

<%= form_with model: @order, url: orders_path, method: :post, local: true do |f| %>
  <% if @order.errors.any? %>
    <div class="alert alert-danger">
      <h4><strong>Comanda nu a putut fi salvată:</strong></h4>
      <ul>
        <% @order.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <fieldset>
    <legend><strong>Date de facturare</strong></legend>

    <div class="row">
      <div class="col"><%= f.label :first_name, "Prenume" %><br><%= f.text_field :first_name, required: true %></div>
      <div class="col"><%= f.label :last_name, "Nume" %><br><%= f.text_field :last_name, required: true %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :company_name, "Companie (opțional)" %><br><%= f.text_field :company_name %></div>
      <div class="col"><%= f.label :cui, "CUI (opțional)" %><br><%= f.text_field :cui %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :cnp, "CNP" %><br><%= f.text_field :cnp, placeholder: "0000000000000" %></div>
      <div class="col"><%= f.label :phone, "Telefon" %><br><%= f.telephone_field :phone, required: true %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :email, "Email" %><br><%= f.email_field :email, required: true %></div>
    </div>

<div class="mb-3">
  <%= f.label :country, "Țara", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :country, class: "form-control", id: "tara_input", placeholder: "Selectează țara...", autocomplete: "off" %>
    <div id="tara_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>

<div class="mb-3">
  <%= f.label :county, "Județ", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :county, class: "form-control", id: "judet_input", placeholder: "Selectează județul...", autocomplete: "off", disabled: true %>
    <div id="judet_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>

<div class="mb-3">
  <%= f.label :city, "Localitate", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :city, class: "form-control", id: "localitate_input", placeholder: "Selectează localitatea...", autocomplete: "off", disabled: true %>
    <div id="localitate_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>








    <div class="row">
      <div class="col"><%= f.label :postal_code, "Cod poștal" %><br><%= f.text_field :postal_code, required: true %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :street, "Stradă" %><br><%= f.text_field :street, required: true %></div>
      <div class="col"><%= f.label :street_number, "Număr" %><br><%= f.text_field :street_number %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :block_details, "Bloc/Etaj/Apt (opțional)" %><br><%= f.text_field :block_details %></div>
    </div>
  </fieldset>

  <hr>

  <div data-controller="toggle-shipping">
  <div style="margin: 20px 0;">


    <div class="field">
  <%= f.check_box :use_different_shipping, id: "toggle-shipping" %>
  <%= f.label :use_different_shipping, "Adresa de livrare este diferită" %>
</div>





  </div>

  <div id="shipping-fields" data-toggle-shipping-target="fields" style="display: none;">
    <fieldset>
      <legend><strong>Date de livrare</strong></legend>

      <div class="row">
        <div class="col"><%= f.label :shipping_first_name, "Prenume livrare" %><br><%= f.text_field :shipping_first_name %></div>
        <div class="col"><%= f.label :shipping_last_name, "Nume livrare" %><br><%= f.text_field :shipping_last_name %></div>
      </div>

      <div class="row">
        <div class="col"><%= f.label :shipping_company_name, "Companie livrare" %><br><%= f.text_field :shipping_company_name %></div>
      </div>

      <div class="mb-3">
    <%= f.label :shipping_country, "Țara livrare", class: "form-label" %>
    <div class="position-relative">
      <%= f.text_field :shipping_country, class: "form-control", id: "shipping_tara_input", placeholder: "Selectează țara...", autocomplete: "off" %>
      <div id="shipping_tara_dropdown" class="dropdown-menu w-100 shadow"></div>
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :shipping_county, "Județ livrare", class: "form-label" %>
    <div class="position-relative">
      <%= f.text_field :shipping_county, class: "form-control", id: "shipping_judet_input", placeholder: "Selectează județul...", autocomplete: "off", disabled: true %>
      <div id="shipping_judet_dropdown" class="dropdown-menu w-100 shadow"></div>
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :shipping_city, "Localitate livrare", class: "form-label" %>
    <div class="position-relative">
      <%= f.text_field :shipping_city, class: "form-control", id: "shipping_localitate_input", placeholder: "Selectează localitatea...", autocomplete: "off", disabled: true %>
      <div id="shipping_localitate_dropdown" class="dropdown-menu w-100 shadow"></div>
    </div>
  </div>






      <div class="row">
        <div class="col"><%= f.label :shipping_postal_code, "Cod poștal livrare" %><br><%= f.text_field :shipping_postal_code %></div>
      </div>

      <div class="row">
        <div class="col"><%= f.label :shipping_street, "Stradă livrare" %><br><%= f.text_field :shipping_street %></div>
        <div class="col"><%= f.label :shipping_street_number, "Număr livrare" %><br><%= f.text_field :shipping_street_number %></div>
      </div>

      <div class="row">
        <div class="col"><%= f.label :shipping_block_details, "Bloc/Etaj/Apt livrare" %><br><%= f.text_field :shipping_block_details %></div>
        <div class="col"><%= f.label :shipping_phone, "Telefon livrare" %><br><%= f.text_field :shipping_phone %></div>
      </div>
    </fieldset>
  </div>

  <div class="row">
    <div class="col">
      <%= f.label :notes, "Note comandă (opțional)" %><br>
      <%= f.text_area :notes, rows: 3 %>
    </div>
  </div>

  <div style="margin-top: 20px;">
    <%= f.submit "Plasează comanda", class: "btn btn-primary" %>
  </div>
<% end %>


<script>
  document.addEventListener("DOMContentLoaded", () => {
    function setupAutocomplete(inputId, dropdownId, endpoint, filterId = null, taraInputId = "tara_input") {
      const input = document.getElementById(inputId);
      const dropdown = document.getElementById(dropdownId);
      let validSuggestions = [];
      let allOptions = []; // Pentru a stoca toate opțiunile
      let lastFilter = null;

      function updateDropdown(query, filterValue = null, showAll = false) {
        const taraInput = document.getElementById(taraInputId);
        const isRomania = taraInput && taraInput.value.trim().toLowerCase() === "romania";

        if ((inputId.endsWith("judet_input") || inputId.endsWith("localitate_input")) && !isRomania) {
          dropdown.innerHTML = '';
          dropdown.style.display = 'none';
          return;
        }

        dropdown.innerHTML = '';
        
        // Dacă showAll este true, avem opțiuni și filtrul nu s-a schimbat, le afișăm
        if (showAll && allOptions.length > 0 && filterValue === lastFilter) {
          displayOptions(allOptions);
          return;
        }

        // Pentru a obține toate rezultatele, folosim strategii diferite
        let searchQuery = query;
        if (showAll || query.length === 0) {
          // Pentru județe, încercăm diverse strategii
          if (inputId.endsWith("judet_input")) {
            // Încercăm fără query sau cu un caracter comun în județe
            searchQuery = '*'; // Sau poți încerca '', 'u', 'i', etc.
          } else if (inputId.endsWith("localitate_input")) {
            searchQuery = '*';
          } else {
            searchQuery = 'a'; // Pentru țări folosim 'a'
          }
        }

        let url = `${endpoint}?q=${encodeURIComponent(searchQuery)}`;
        if (filterValue) {
          url += `&filter=${encodeURIComponent(filterValue)}`;
        }
        
        fetch(url)
          .then((response) => {
            if (!response.ok) {
              console.error("Fetch error: ", response.status);
              throw new Error("Network response not ok");
            }
            return response.json();
          })
          .then((data) => {
            console.log("Received data for " + inputId + ": ", data);
            
            // Pentru țară, punem România prima
            if (inputId.endsWith("tara_input")) {
              const romaniaIndex = data.findIndex(item => item.toLowerCase() === "romania");
              if (romaniaIndex > -1) {
                const romania = data.splice(romaniaIndex, 1)[0];
                data.unshift(romania);
              }
            }
            
            validSuggestions = data;
            allOptions = data; // Salvăm toate opțiunile
            lastFilter = filterValue;
            displayOptions(data);
          })
          .catch((error) => console.error("Eroare la încărcarea sugestiilor:", error));
      }

      function displayOptions(data) {
        dropdown.innerHTML = '';
        if (data.length > 0) {
          dropdown.style.display = 'block';
          data.forEach((item) => {
            const option = document.createElement('a');
            option.classList.add('dropdown-item');
            option.textContent = item;
            option.href = '#';
            option.addEventListener('click', (e) => {
              e.preventDefault();
              input.value = item;
              dropdown.style.display = 'none';
              enableNextFields(inputId, item);
            });
            dropdown.appendChild(option);
          });
        } else {
          dropdown.style.display = 'none';
        }
      }

      // La click în input, arată toate opțiunile
      input.addEventListener('click', () => {
        const filterValue = filterId ? document.getElementById(filterId)?.value.trim() : null;
        
        // Șterge valoarea existentă când dai click (pentru a putea reselecta)
        const taraInput = document.getElementById(taraInputId);
        const isRomania = taraInput && taraInput.value.trim().toLowerCase() === "romania";
        
        if (inputId.endsWith("tara_input")) {
          input.value = ''; // Resetează pentru a putea selecta din nou
          disableNextFields(inputId);
        } else if (isRomania && (inputId.endsWith("judet_input") || inputId.endsWith("localitate_input"))) {
          input.value = ''; // Resetează pentru a putea selecta din nou
          disableNextFields(inputId);
        }
        
        if (input.value.trim() === '') {
          updateDropdown('', filterValue, true);
        } else {
          updateDropdown(input.value.trim(), filterValue, false);
        }
      });

      // La focus, arată toate opțiunile
      input.addEventListener('focus', () => {
        const filterValue = filterId ? document.getElementById(filterId)?.value.trim() : null;
        
        // Dacă e România și județ/localitate, arată lista
        const taraInput = document.getElementById(taraInputId);
        const isRomania = taraInput && taraInput.value.trim().toLowerCase() === "romania";
        
        if (inputId.endsWith("tara_input") || (isRomania && (inputId.endsWith("judet_input") || inputId.endsWith("localitate_input")))) {
          updateDropdown('', filterValue, true);
        } else if (input.value.trim() === '') {
          updateDropdown('', filterValue, true);
        }
      });

      // Când utilizatorul tastează
      input.addEventListener('input', () => {
        const taraInput = document.getElementById(taraInputId);
        const isRomania = taraInput && taraInput.value.trim().toLowerCase() === "romania";
        
        // BLOCHEAZĂ tastarea pentru țară și pentru România la județ și localitate
        if (inputId.endsWith("tara_input") || (isRomania && (inputId.endsWith("judet_input") || inputId.endsWith("localitate_input")))) {
          // Previne orice tastare - doar selecție din listă
          input.value = ''; // Resetează imediat orice încercare de tastare
          return;
        }
        
        // Pentru alte cazuri, permite tastare și filtrare
        const query = input.value.trim();
        const filterValue = filterId ? document.getElementById(filterId)?.value.trim() : null;
        
        if (query === '') {
          updateDropdown('', filterValue, true);
        } else {
          const filtered = allOptions.filter(item => 
            item.toLowerCase().includes(query.toLowerCase())
          );
          validSuggestions = filtered;
          displayOptions(filtered);
        }
      });

      // Când se pierde focalizarea
      input.addEventListener('blur', () => {
        setTimeout(() => {
          // Pentru țări și județe/localități din România, verificăm lista
          const taraInput = document.getElementById(taraInputId);
          const isRomania = taraInput && taraInput.value.trim().toLowerCase() === "romania";
          
          // Validare STRICTĂ pentru țară și pentru România - OBLIGATORIU din listă
          if (inputId.endsWith("tara_input") || (isRomania && (inputId.endsWith("judet_input") || inputId.endsWith("localitate_input")))) {
            if (!validSuggestions.includes(input.value)) {
              input.value = ''; // Șterge dacă nu e din listă
              disableNextFields(inputId);
            }
          }
          // Pentru alte țări (non-România), permitem input liber pentru județ și localitate
          
          dropdown.style.display = 'none';
        }, 200);
      });

      // Click în afara dropdown-ului
      document.addEventListener('click', (event) => {
        if (!dropdown.contains(event.target) && event.target !== input) {
          dropdown.style.display = 'none';
        }
      });
    }

    function enableNextFields(inputId, value) {
      if (inputId.endsWith("tara_input")) {
        const tara = value.trim().toLowerCase();
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        const judetInput = document.getElementById(`${prefix}judet_input`);
        const localitateInput = document.getElementById(`${prefix}localitate_input`);
        
        if (tara === "romania") {
          // Pentru România, activăm județul cu autocomplete și READONLY pentru a preveni tastarea
          judetInput.disabled = false;
          judetInput.readOnly = true; // READONLY = doar click și selecție
          localitateInput.disabled = true;
          localitateInput.readOnly = true;
          judetInput.value = "";
          localitateInput.value = "";
          judetInput.placeholder = "Click pentru a selecta județul...";
          localitateInput.placeholder = "Click pentru a selecta localitatea...";
          
          // Stilizare pentru a arăta că e clickable, nu editabil
          judetInput.style.cursor = "pointer";
          localitateInput.style.cursor = "pointer";
          judetInput.style.backgroundColor = "#fff";
          localitateInput.style.backgroundColor = "#fff";
        } else {
          // Pentru alte țări, activăm ambele câmpuri cu input liber
          judetInput.disabled = false;
          judetInput.readOnly = false;
          localitateInput.disabled = false;
          localitateInput.readOnly = false;
          judetInput.value = "";
          localitateInput.value = "";
          judetInput.placeholder = "Introduceți județul/regiunea...";
          localitateInput.placeholder = "Introduceți localitatea...";
          judetInput.style.cursor = "text";
          localitateInput.style.cursor = "text";
          judetInput.style.backgroundColor = "#fff";
          localitateInput.style.backgroundColor = "#fff";
        }
      } else if (inputId.endsWith("judet_input")) {
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        const localitateInput = document.getElementById(`${prefix}localitate_input`);
        localitateInput.disabled = false;
        localitateInput.value = "";
        
        // Verifică dacă e România pentru a seta readonly
        const taraInput = document.getElementById(prefix ? `${prefix}tara_input` : "tara_input");
        const isRomania = taraInput && taraInput.value.trim().toLowerCase() === "romania";
        if (isRomania) {
          localitateInput.readOnly = true;
          localitateInput.style.cursor = "pointer";
        }
      }
    }

    function disableNextFields(inputId) {
      if (inputId.endsWith("tara_input")) {
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        document.getElementById(`${prefix}judet_input`).disabled = true;
        document.getElementById(`${prefix}localitate_input`).disabled = true;
      } else if (inputId.endsWith("judet_input")) {
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        document.getElementById(`${prefix}localitate_input`).disabled = true;
      }
    }

    function initializeFields(prefix = "") {
      const taraInput = document.getElementById(`${prefix}tara_input`);
      const judetInput = document.getElementById(`${prefix}judet_input`);
      const localitateInput = document.getElementById(`${prefix}localitate_input`);

      if (taraInput.value.trim()) {
        const tara = taraInput.value.trim().toLowerCase();
        judetInput.disabled = tara !== "romania";
        if (tara === "romania" && judetInput.value.trim()) {
          localitateInput.disabled = false;
        }
      }
    }

    // Configurează autocomplete pentru Facturare
    setupAutocomplete("tara_input", "tara_dropdown", "/autocomplete_tara");
    setupAutocomplete("judet_input", "judet_dropdown", "/autocomplete_judet");
    setupAutocomplete("localitate_input", "localitate_dropdown", "/autocomplete_localitate", "judet_input");

    // Configurează autocomplete pentru Shipping
    setupAutocomplete("shipping_tara_input", "shipping_tara_dropdown", "/autocomplete_tara", null, "shipping_tara_input");
    setupAutocomplete("shipping_judet_input", "shipping_judet_dropdown", "/autocomplete_judet", null, "shipping_tara_input");
    setupAutocomplete("shipping_localitate_input", "shipping_localitate_dropdown", "/autocomplete_localitate", "shipping_judet_input", "shipping_tara_input");

    // Setează câmpurile pentru țară ca read-only și clickable
    const taraInputs = [document.getElementById("tara_input"), document.getElementById("shipping_tara_input")];
    taraInputs.forEach(taraInput => {
      if (taraInput) {
        taraInput.readOnly = true;
        taraInput.style.cursor = "pointer";
        taraInput.placeholder = "Click pentru a selecta țara...";
      }
    });

    // Inițializează starea câmpurilor la load
    initializeFields();
    initializeFields("shipping_");

    // Gestionăm activarea/dezactivarea în funcție de țară
    const taraInput = document.getElementById("tara_input");
    taraInput.addEventListener("input", function () {
      enableNextFields("tara_input", taraInput.value);
    });

    const shippingTaraInput = document.getElementById("shipping_tara_input");
    shippingTaraInput.addEventListener("input", function () {
      enableNextFields("shipping_tara_input", shippingTaraInput.value);
    });
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkbox = document.getElementById("toggle-shipping");
    const fields = document.getElementById("shipping-fields");

    if (checkbox && fields) {
      fields.style.display = checkbox.checked ? "block" : "none";

      checkbox.addEventListener("change", () => {
        fields.style.display = checkbox.checked ? "block" : "none";
      });
    } else {
      console.error("Eroare: Checkbox sau fields nu găsit!");
    }
  });
</script>