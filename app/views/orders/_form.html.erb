<style>
.dropdown-menu {
  border: 1px solid #ccc;
  background-color: white;
  max-height: 200px;
  overflow-y: auto;
  position: absolute;
  z-index: 1000;
  width: 100%;
}
.dropdown-item {
  padding: 8px;
  cursor: pointer;
}
.dropdown-item:hover {
  background-color: #f0f0f0;
}
.row {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  margin-bottom: 10px;
}
.col {
  flex: 1;
  min-width: 200px;
}
</style>

<%= form_with model: @order, url: orders_path, method: :post, local: true do |f| %>
  <% if @order.errors.any? %>
    <div class="alert alert-danger">
      <h4><strong>Comanda nu a putut fi salvată:</strong></h4>
      <ul>
        <% @order.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <fieldset>
    <legend><strong>Date de facturare</strong></legend>

    <div class="row">
      <div class="col"><%= f.label :first_name, "Prenume" %><br><%= f.text_field :first_name, required: true %></div>
      <div class="col"><%= f.label :last_name, "Nume" %><br><%= f.text_field :last_name, required: true %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :company_name, "Companie (opțional)" %><br><%= f.text_field :company_name %></div>
      <div class="col"><%= f.label :cui, "CUI (opțional)" %><br><%= f.text_field :cui %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :cnp, "CNP" %><br><%= f.text_field :cnp, placeholder: "0000000000000" %></div>
      <div class="col"><%= f.label :phone, "Telefon" %><br><%= f.telephone_field :phone, required: true %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :email, "Email" %><br><%= f.email_field :email, required: true %></div>
    </div>

<div class="mb-3">
  <%= f.label :country, "Țara", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :country, class: "form-control", id: "tara_input", placeholder: "Selectează țara...", autocomplete: "off" %>
    <div id="tara_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>

<div class="mb-3">
  <%= f.label :county, "Județ", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :county, class: "form-control", id: "judet_input", placeholder: "Selectează județul...", autocomplete: "off", disabled: true %>
    <div id="judet_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>

<div class="mb-3">
  <%= f.label :city, "Localitate", class: "form-label" %>
  <div class="position-relative">
    <%= f.text_field :city, class: "form-control", id: "localitate_input", placeholder: "Selectează localitatea...", autocomplete: "off", disabled: true %>
    <div id="localitate_dropdown" class="dropdown-menu w-100 shadow"></div>
  </div>
</div>








    <div class="row">
      <div class="col"><%= f.label :postal_code, "Cod poștal" %><br><%= f.text_field :postal_code, required: true %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :street, "Stradă" %><br><%= f.text_field :street, required: true %></div>
      <div class="col"><%= f.label :street_number, "Număr" %><br><%= f.text_field :street_number %></div>
    </div>

    <div class="row">
      <div class="col"><%= f.label :block_details, "Bloc/Etaj/Apt (opțional)" %><br><%= f.text_field :block_details %></div>
    </div>
  </fieldset>

  <hr>

  <div data-controller="toggle-shipping">
  <div style="margin: 20px 0;">


    <div class="field">
  <%= f.check_box :use_different_shipping, id: "toggle-shipping" %>
  <%= f.label :use_different_shipping, "Adresa de livrare este diferită" %>
</div>





  </div>

  <div id="shipping-fields" data-toggle-shipping-target="fields" style="display: none;">
    <fieldset>
      <legend><strong>Date de livrare</strong></legend>

      <div class="row">
        <div class="col"><%= f.label :shipping_first_name, "Prenume livrare" %><br><%= f.text_field :shipping_first_name %></div>
        <div class="col"><%= f.label :shipping_last_name, "Nume livrare" %><br><%= f.text_field :shipping_last_name %></div>
      </div>

      <div class="row">
        <div class="col"><%= f.label :shipping_company_name, "Companie livrare" %><br><%= f.text_field :shipping_company_name %></div>
      </div>

      <div class="mb-3">
    <%= f.label :shipping_country, "Țara livrare", class: "form-label" %>
    <div class="position-relative">
      <%= f.text_field :shipping_country, class: "form-control", id: "shipping_tara_input", placeholder: "Selectează țara...", autocomplete: "off" %>
      <div id="shipping_tara_dropdown" class="dropdown-menu w-100 shadow"></div>
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :shipping_county, "Județ livrare", class: "form-label" %>
    <div class="position-relative">
      <%= f.text_field :shipping_county, class: "form-control", id: "shipping_judet_input", placeholder: "Selectează județul...", autocomplete: "off", disabled: true %>
      <div id="shipping_judet_dropdown" class="dropdown-menu w-100 shadow"></div>
    </div>
  </div>

  <div class="mb-3">
    <%= f.label :shipping_city, "Localitate livrare", class: "form-label" %>
    <div class="position-relative">
      <%= f.text_field :shipping_city, class: "form-control", id: "shipping_localitate_input", placeholder: "Selectează localitatea...", autocomplete: "off", disabled: true %>
      <div id="shipping_localitate_dropdown" class="dropdown-menu w-100 shadow"></div>
    </div>
  </div>






      <div class="row">
        <div class="col"><%= f.label :shipping_postal_code, "Cod poștal livrare" %><br><%= f.text_field :shipping_postal_code %></div>
      </div>

      <div class="row">
        <div class="col"><%= f.label :shipping_street, "Stradă livrare" %><br><%= f.text_field :shipping_street %></div>
        <div class="col"><%= f.label :shipping_street_number, "Număr livrare" %><br><%= f.text_field :shipping_street_number %></div>
      </div>

      <div class="row">
        <div class="col"><%= f.label :shipping_block_details, "Bloc/Etaj/Apt livrare" %><br><%= f.text_field :shipping_block_details %></div>
        <div class="col"><%= f.label :shipping_phone, "Telefon livrare" %><br><%= f.text_field :shipping_phone %></div>
      </div>
    </fieldset>
  </div>

  <div class="row">
    <div class="col">
      <%= f.label :notes, "Note comandă (opțional)" %><br>
      <%= f.text_area :notes, rows: 3 %>
    </div>
  </div>

  <div style="margin-top: 20px;">
    <%= f.submit "Plasează comanda", class: "btn btn-primary" %>
  </div>
<% end %>



<script>
  document.addEventListener("turbo:load", () => {
    function setupAutocomplete(inputId, dropdownId, endpoint, filterId = null, taraInputId = "tara_input") {
      const input = document.getElementById(inputId);
      const dropdown = document.getElementById(dropdownId);
      let validSuggestions = []; // Stocăm sugestiile valide

      function updateDropdown(query, filterValue = null) {
        // 1. Verificăm dacă țara este România
        const taraInput = document.getElementById(taraInputId);
        const isRomania = taraInput && taraInput.value.trim().toLowerCase() === "romania";

        // 2. Dacă input-ul e județ sau localitate și țara NU e România,
        //    nu mai afișăm sugestii (dropdown)
        if ((inputId.endsWith("judet_input") || inputId.endsWith("localitate_input")) && !isRomania) {
          dropdown.innerHTML = '';
          dropdown.style.display = 'none';
          return;
        }

        // 3. Dacă e România sau e vorba de câmpul Țară, continuăm logica obișnuită
        dropdown.innerHTML = ''; // Resetăm lista
        if (query.length > 1) {
          let url = `${endpoint}?q=${encodeURIComponent(query)}`;
          if (filterValue) {
            url += `&filter=${encodeURIComponent(filterValue)}`;
          }
          fetch(url)
            .then((response) => {
              if (!response.ok) {
                console.error("Fetch error: ", response.status);
                throw new Error("Network response not ok");
              }
              return response.json();
            })
            .then((data) => {
              console.log("Received data for " + inputId + ": ", data); // Log to see what's returned
              validSuggestions = data; // Actualizăm lista sugestiilor valide
              if (data.length > 0) {
                dropdown.style.display = 'block';
                data.forEach((item) => {
                  const option = document.createElement('a');
                  option.classList.add('dropdown-item');
                  option.textContent = item;
                  option.href = '#';
                  option.addEventListener('click', (e) => {
                    e.preventDefault();
                    input.value = item;
                    dropdown.style.display = 'none';
                    // Enable câmpurile următoare doar dacă e selectat din listă
                    enableNextFields(inputId, item);
                  });
                  dropdown.appendChild(option);
                });
              } else {
                dropdown.style.display = 'none';
              }
            })
            .catch((error) => console.error("Eroare la încărcarea sugestiilor:", error));
        } else {
          validSuggestions = []; // Resetăm sugestiile valide
          dropdown.style.display = 'none';
        }
      }

      // Când utilizatorul tastează
      input.addEventListener('input', () => {
        const query = input.value.trim();
        const filterValue = filterId ? document.getElementById(filterId)?.value.trim() : null;
        updateDropdown(query, filterValue);
      });

      // Când se pierde focalizarea (obligatoriu din listă)
      input.addEventListener('blur', () => {
        if (!validSuggestions.includes(input.value)) {
          input.value = ''; // Reset dacă nu e din listă
          disableNextFields(inputId);
        }
      });

      // Când se dă click în afara dropdown-ului
      document.addEventListener('click', (event) => {
        if (!dropdown.contains(event.target) && event.target !== input) {
          dropdown.style.display = 'none';
        }
      });
    }

    function enableNextFields(inputId, value) {
      if (inputId.endsWith("tara_input")) {
        const tara = value.trim().toLowerCase();
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        const judetInput = document.getElementById(`${prefix}judet_input`);
        const localitateInput = document.getElementById(`${prefix}localitate_input`);
        judetInput.disabled = tara !== "romania";
        localitateInput.disabled = true; // Reset enable localitate
        if (tara !== "romania") {
          judetInput.value = "";
          localitateInput.value = "";
        }
      } else if (inputId.endsWith("judet_input")) {
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        document.getElementById(`${prefix}localitate_input`).disabled = false;
        document.getElementById(`${prefix}localitate_input`).value = "";
      }
    }

    function disableNextFields(inputId) {
      if (inputId.endsWith("tara_input")) {
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        document.getElementById(`${prefix}judet_input`).disabled = true;
        document.getElementById(`${prefix}localitate_input`).disabled = true;
      } else if (inputId.endsWith("judet_input")) {
        const prefix = inputId.startsWith("shipping_") ? "shipping_" : "";
        document.getElementById(`${prefix}localitate_input`).disabled = true;
      }
    }

    function initializeFields(prefix = "") {
      const taraInput = document.getElementById(`${prefix}tara_input`);
      const judetInput = document.getElementById(`${prefix}judet_input`);
      const localitateInput = document.getElementById(`${prefix}localitate_input`);

      if (taraInput.value.trim()) {
        const tara = taraInput.value.trim().toLowerCase();
        judetInput.disabled = tara !== "romania";
        if (tara === "romania" && judetInput.value.trim()) {
          localitateInput.disabled = false;
        }
      }
    }

    // Configurează autocomplete pentru Facturare
    setupAutocomplete("tara_input", "tara_dropdown", "/autocomplete_tara");
    setupAutocomplete("judet_input", "judet_dropdown", "/autocomplete_judet");
    setupAutocomplete("localitate_input", "localitate_dropdown", "/autocomplete_localitate", "judet_input");

    // Configurează autocomplete pentru Shipping
    setupAutocomplete("shipping_tara_input", "shipping_tara_dropdown", "/autocomplete_tara", null, "shipping_tara_input");
    setupAutocomplete("shipping_judet_input", "shipping_judet_dropdown", "/autocomplete_judet", null, "shipping_tara_input");
    setupAutocomplete("shipping_localitate_input", "shipping_localitate_dropdown", "/autocomplete_localitate", "shipping_judet_input", "shipping_tara_input");

    // Inițializează starea câmpurilor la load (pentru pre-populare)
    initializeFields(); // Pentru facturare
    initializeFields("shipping_"); // Pentru shipping

    // Gestionăm activarea/dezactivarea în funcție de țară (pentru input events)
    const taraInput = document.getElementById("tara_input");
    taraInput.addEventListener("input", function () {
      enableNextFields("tara_input", taraInput.value);
    });

    const shippingTaraInput = document.getElementById("shipping_tara_input");
    shippingTaraInput.addEventListener("input", function () {
      enableNextFields("shipping_tara_input", shippingTaraInput.value);
    });
  });
</script>



<script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkbox = document.getElementById("toggle-shipping");
    const fields = document.getElementById("shipping-fields");

    if (checkbox && fields) {
      // Inițializează starea
      fields.style.display = checkbox.checked ? "block" : "none";

      // Event listener pentru change
      checkbox.addEventListener("change", () => {
        fields.style.display = checkbox.checked ? "block" : "none";
      });
    } else {
      console.error("Eroare: Checkbox sau fields nu găsit!");
    }
  });
</script>