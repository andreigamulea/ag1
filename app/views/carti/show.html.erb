<div class="container_content product-view">
  <div class="section-title">
    <h1><%= @product.name %></h1>
    <div class="separator"></div>
  </div>



  <div class="product-grid <%= 'no-thumbnails' unless @product.external_image_urls.present? && @product.external_image_urls.any? %>">
    <!-- Column 1: Thumbnails (includem și imaginea principală) -->
    <% if @product.external_image_urls.present? && @product.external_image_urls.any? %>
      <div class="product-thumbnails">
        <!-- ADĂUGĂM IMAGINEA PRINCIPALĂ ÎN THUMBNAILS -->
        <% if @product.external_image_url.present? %>
          <% main_thumb_url = "#{@product.external_image_url}?width=600&height=600&quality=95" %>
          <% main_full_url = "#{@product.external_image_url}?width=2000&height=2000&quality=95" %>
          <%= image_tag main_thumb_url, class: "thumb main-thumb", data: { full: main_full_url }, alt: "Imagine principală" %>
        <% end %>
        
        <!-- THUMBNAILS SECUNDARE -->
        <% @product.external_image_urls.each do |url| %>
          <% thumb_url = "#{url}?width=600&height=600&quality=95" %>
          <% full_url  = "#{url}?width=2000&height=2000&quality=95" %>
          <%= image_tag thumb_url, class: "thumb", data: { full: full_url }, alt: "Thumbnail" %>
        <% end %>
      </div>
    <% end %>

    <!-- Column 2: Main Image -->
    <div class="product-image">
      <% if @product.external_image_url.present? %>
        <% display_url = "#{@product.external_image_url}?width=600&height=600&quality=85" %>
        <% main_full_url = "#{@product.external_image_url}?width=2000&height=2000&quality=95" %>
        <div class="image-container">
          <%= image_tag display_url, alt: @product.name, class: "main-image popup-trigger", data: { full: main_full_url } %>
        </div>
      <% else %>
        <%= image_tag "placeholder.png", alt: "Fără imagine", class: "main-image popup-trigger" %>
      <% end %>
    </div>

    <!-- Column 3: Product Details -->
    <div class="product-details">
      <% if @product.custom_attributes && @product.custom_attributes["autor"] %>
        <p class="product-author"><strong>Autor:</strong> <%= @product.custom_attributes["autor"] %></p>
      <% end %>
      <p class="product-categories">
  <strong>Categorii:</strong>
  <%= @product.categories.map(&:name).join(", ") if @product.categories.present? %>
</p>

      <div class="product-description">
        <strong>Descriere:</strong>
        <%= simple_format(@product.description) %>
      </div>
      <div class="badges">
        <span class="badge">
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" fill="#8b0000" viewBox="0 0 24 24" width="16" height="16">
            <path d="M3 3h13v13H3V3zm15 6h3l3 4v3h-6V9zM6 18a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm12 0a2 2 0 1 0 .001 3.999A2 2 0 0 0 18 18z"/>
          </svg>
          Livrare rapidă
        </span>
        <span class="badge">
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" fill="#8b0000" viewBox="0 0 24 24" width="16" height="16">
            <path d="M9 16.17l-3.88-3.88-1.41 1.41L9 19 20.29 7.71 18.88 6.29z"/>
          </svg>
          În stoc
        </span>
      </div>
    </div>

    <!-- Column 4: Price and Cart Actions -->
    <div class="product-actions">
      <p class="product-price"><strong>Preț:</strong> <%= number_to_currency(@product.price, unit: "lei", format: "%n %u") %></p>
      <%= form_with url: "/cart/add", method: :post, local: true, class: "add-to-cart-form" do |f| %>
        <%= f.hidden_field :product_id, value: @product.id %>
        <div class="quantity-wrapper">
          <label for="quantity_input" class="quantity-label">Cantitate:</label>
          <div class="quantity-controls">
            <button type="button" class="quantity-btn quantity-decrease">-</button>
            <%= f.number_field :quantity, value: 1, min: 1, class: "quantity-input", id: "quantity_input" %>
            <button type="button" class="quantity-btn quantity-increase">+</button>
          </div>
        </div>
        <%= f.submit "Adaugă în coș", class: "btn btn-primary add-to-cart-btn" %>
      <% end %>
      <%= link_to "Finalizează comanda", new_order_path, class: "btn btn-checkout" %>
      <%= link_to "Continuă cumpărăturile", carti_index_path, class: "btn btn-secondary continue-shopping-btn" %>
    </div>
  </div>

  <div id="lightbox-overlay">
    <span id="lightbox-close">×</span>
    <img id="lightbox-image" src="" alt="Imagine mărită">
  </div>
</div>

<style>
/* ----------- PRODUCT PAGE STYLING ----------- */
.container_content.product-view {
  max-width: 1200px;
  margin: 20px auto;
  padding: 20px;
  background: white;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.section-title {
  text-align: center;
  margin-bottom: 20px;
}

.section-title h1 {
  font-size: 24px;
  font-weight: bold;
  color: #8b0000;
  margin-bottom: 8px;
}

.separator {
  width: 40%;
  height: 2px;
  background: #8b0000;
  opacity: 0.2;
  margin: 0 auto;
}

.product-grid {
  display: grid;
  grid-template-columns: 100px 1fr 1.5fr 1fr;
  gap: 15px;
  align-items: start;
}

.product-grid.no-thumbnails {
  grid-template-columns: 1fr 1.5fr 1fr;
}

.product-thumbnails {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.product-grid.no-thumbnails .product-thumbnails {
  display: none;
}

.thumb {
  width: 80px;
  height: 80px;
  object-fit: cover;
  border: 2px solid #ddd;
  border-radius: 4px;
  cursor: pointer;
  transition: border-color 0.3s ease-in-out, transform 0.3s ease-in-out;
}

.thumb:hover {
  border-color: #8b0000;
  transform: scale(1.05);
}

.thumb.active {
  border-color: #8b0000;
  border-width: 3px;
  box-shadow: 0 0 8px rgba(139, 0, 0, 0.4);
}

.product-image {
  text-align: center;
  position: relative;
}

.image-container {
  position: relative;
  overflow: hidden;
  border-radius: 8px;
  height: 400px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #ffffff;
  cursor: zoom-in;
}

.main-image {
  max-width: 100%;
  max-height: 400px;
  object-fit: contain;
  border-radius: 8px;
  /* box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); */
  transition: transform 0.1s ease-out;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  transform-origin: center center;
}

/* ZOOM activ la hover */
.image-container:hover .main-image {
  transform: scale(2);
}

.product-details {
  padding: 10px;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.product-author,
.product-categories,
.product-price,
.product-description {
  font-size: 14px;
  color: #333;
}

.product-author strong,
.product-categories strong,
.product-price strong,
.product-description strong {
  color: #8b0000;
}

.product-price {
  font-size: 16px;
  font-weight: bold;
}

.product-description {
  line-height: 1.5;
  max-height: 200px;
  overflow-y: auto;
}

.badges {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-top: 10px;
  width: max-content;
}

.badge {
  display: flex;
  align-items: center;
  gap: 6px;
  background: #fff4e5;
  padding: 6px 10px;
  border-radius: 5px;
  font-size: 13px;
  color: #8b0000;
  font-weight: 600;
  border: 1px solid #ffa500;
  transition: background 0.3s ease-in-out;
}

.badge:hover {
  background: #ffecd1;
}

.icon {
  width: 16px;
  height: 16px;
}

.product-actions {
  padding: 10px;
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: flex-start;
  grid-column: 4 / 5;
}

.product-grid.no-thumbnails .product-actions {
  grid-column: 3 / 4;
}

.add-to-cart-form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.quantity-wrapper {
  display: flex;
  align-items: center;
  gap: 8px;
}

.quantity-label {
  font-size: 13px;
  font-weight: 600;
  color: #8b0000;
}

.quantity-controls {
  display: flex;
  align-items: center;
  border: 1px solid #ddd;
  border-radius: 4px;
  background: #f9f9f9;
}

.quantity-input {
  width: 50px;
  padding: 6px;
  border: none;
  text-align: center;
  font-size: 13px;
  background: transparent;
}

.quantity-btn {
  background: #ffa500;
  color: white;
  border: none;
  padding: 6px 10px;
  font-size: 13px;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.3s ease-in-out;
}

.quantity-btn:hover {
  background: #e69500;
}

.btn {
  font-size: 13px;
  font-weight: bold;
  padding: 8px 16px;
  border-radius: 4px;
  text-transform: uppercase;
  text-decoration: none;
  cursor: pointer;
  transition: background 0.3s ease-in-out, border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
  width: 100%;
  text-align: center;
  display: inline-block;
  box-sizing: border-box;
}

.btn-primary {
  background: #ffa500;
  border: 1px solid #ffa500;
  color: white;
}

.btn-primary:hover {
  background: #e69500;
  border-color: #e69500;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.btn-secondary {
  background: transparent;
  border: 1px solid #8b0000;
  color: #8b0000;
}

.btn-secondary:hover {
  background: #8b0000;
  color: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.product-actions .btn-checkout {
  background: #28a745;
  border: 1px solid #28a745;
  color: white;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.product-actions .btn-checkout:hover {
  background: #218838;
  border-color: #218838;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.15);
}

#lightbox-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.85);
  display: none;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

#lightbox-image {
  max-width: 90vw;
  max-height: 90vh;
  border-radius: 8px;
}

#lightbox-close {
  position: absolute;
  top: 15px;
  right: 25px;
  font-size: 1.5em;
  color: white;
  cursor: pointer;
  z-index: 10000;
}

#lightbox-close:hover {
  color: #ffa500;
}

/* Responsive Design */
@media (max-width: 992px) {
  .product-grid {
    grid-template-columns: 80px 1fr 1fr;
    gap: 10px;
  }
  .product-grid.no-thumbnails {
    grid-template-columns: 1fr 1fr;
  }
  .product-actions {
    grid-column: 3 / 4;
  }
  .product-grid.no-thumbnails .product-actions {
    grid-column: 2 / 3;
  }
  .image-container {
    height: 300px;
  }
  .main-image {
    max-height: 300px;
  }
}

@media (max-width: 768px) {
  .container_content.product-view {
    padding: 15px;
  }
  .section-title h1 {
    font-size: 20px;
  }
  .product-grid {
    grid-template-columns: 1fr;
  }
  .product-grid.no-thumbnails {
    grid-template-columns: 1fr;
  }
  .product-thumbnails {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
  }
  .thumb {
    width: 60px;
    height: 60px;
  }
  .image-container {
    height: 250px;
  }
  .main-image {
    max-height: 250px;
  }
  .product-details,
  .product-actions {
    padding: 0;
  }
  .product-author,
  .product-categories,
  .product-price,
  .product-description {
    font-size: 13px;
  }
  .product-price {
    font-size: 14px;
  }
  .btn {
    font-size: 12px;
  }
  .product-actions {
    grid-column: auto;
  }
}

@media (max-width: 480px) {
  .container_content.product-view {
    padding: 10px;
  }
  .section-title h1 {
    font-size: 18px;
  }
  .thumb {
    width: 50px;
    height: 50px;
  }
  .badge {
    font-size: 12px;
    padding: 5px 8px;
  }
  .icon {
    width: 14px;
    height: 14px;
  }
}
</style>

<script>
document.addEventListener('turbo:load', initializeBindings);
document.addEventListener('DOMContentLoaded', initializeBindings);

function initializeBindings() {
  bindLightbox();
  bindQuantityControls();
  bindThumbnailClick();
  console.log('Initialize bindings executed');
}

function bindLightbox() {
  const overlay = document.getElementById('lightbox-overlay');
  const lightboxImage = document.getElementById('lightbox-image');
  const closeBtn = document.getElementById('lightbox-close');

  if (!overlay || !lightboxImage || !closeBtn) {
    console.warn('Lightbox elements not fully found, skipping binding');
    return;
  }

  const newOverlay = overlay.cloneNode(true);
  overlay.parentNode.replaceChild(newOverlay, overlay);
  const newCloseBtn = newOverlay.querySelector('#lightbox-close');
  const newLightboxImage = newOverlay.querySelector('#lightbox-image');

  // Lightbox pe click la imaginea principală
  document.addEventListener('click', (e) => {
    if (e.target.classList.contains('main-image')) {
      const fullUrl = e.target.dataset.full || e.target.src;
      newLightboxImage.src = fullUrl;
      newOverlay.style.display = 'flex';
      console.log('Lightbox opened with:', fullUrl);
    }
  });

  function closeLightbox() {
    newOverlay.style.display = 'none';
    newLightboxImage.src = '';
  }

  newCloseBtn.addEventListener('click', closeLightbox);
  newOverlay.addEventListener('click', e => {
    if (e.target === newOverlay || e.target === newCloseBtn) {
      closeLightbox();
    }
  });
}

function bindThumbnailClick() {
  const mainImage = document.querySelector('.main-image');
  const imageContainer = document.querySelector('.image-container');
  const thumbs = document.querySelectorAll('.thumb');
  
  if (!mainImage) {
    console.error('Main image not found');
    return;
  }
  if (!thumbs || thumbs.length === 0) {
    console.warn('No thumbnails found');
    return;
  }

  console.log(`Found ${thumbs.length} thumbnails (including main image)`);

  // Marchează primul thumbnail (imaginea principală) ca activ
  if (thumbs.length > 0) {
    thumbs[0].classList.add('active');
  }

  // ZOOM cu urmărire mouse
  if (imageContainer) {
    imageContainer.addEventListener('mousemove', (e) => {
      const rect = imageContainer.getBoundingClientRect();
      const x = ((e.clientX - rect.left) / rect.width) * 100;
      const y = ((e.clientY - rect.top) / rect.height) * 100;
      
      mainImage.style.transformOrigin = `${x}% ${y}%`;
    });

    imageContainer.addEventListener('mouseleave', () => {
      mainImage.style.transformOrigin = 'center center';
    });
  }

  thumbs.forEach((thumb, index) => {
    // CLICK pentru a schimba imaginea permanent
    thumb.addEventListener('click', (e) => {
      e.preventDefault();
      const fullResUrl = thumb.dataset.full;
      
      console.log(`[Thumb ${index}] CLICKED - Switching to:`, fullResUrl);
      
      if (fullResUrl) {
        // Îndepărtăm clasa active de la toate thumbnailurile
        thumbs.forEach(t => t.classList.remove('active'));
        // Adăugăm clasa active la thumbnailul curent
        thumb.classList.add('active');
        
        // Schimbăm imaginea principală
        mainImage.style.opacity = '0.5';
        
        const newImage = new Image();
        newImage.onload = () => {
          mainImage.src = fullResUrl;
          mainImage.dataset.full = fullResUrl;
          mainImage.style.opacity = '1';
          console.log(`[Thumb ${index}] ✓ Image switched successfully`);
        };
        newImage.onerror = () => {
          console.error(`[Thumb ${index}] ✗ Failed to load image:`, fullResUrl);
          mainImage.style.opacity = '1';
        };
        newImage.src = fullResUrl;
      }
    });
  });
}

function bindQuantityControls() {
  const input = document.getElementById('quantity_input');
  const decreaseBtn = document.querySelector('.quantity-decrease');
  const increaseBtn = document.querySelector('.quantity-increase');

  if (!input || !decreaseBtn || !increaseBtn) {
    console.warn('Quantity controls not found');
    return;
  }

  function adjustQty(delta) {
    let value = parseInt(input.value, 10) || 1;
    value = Math.max(1, value + delta);
    input.value = value;
  }

  decreaseBtn.addEventListener('click', () => adjustQty(-1));
  increaseBtn.addEventListener('click', () => adjustQty(1));
}
</script>
