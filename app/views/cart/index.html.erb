<div class="cart-container">
  <h1>Coșul tău</h1>

  <!-- Lista articolelor din coș -->
  <% if @cart_items.any? %>
    <%= form_tag update_all_cart_index_path, method: :post, class: "cart-form", data: { turbo: false } do %>
      <section class="cart-items">
        <ul class="cart-item-list">
          <% @cart_items.each do |item| %>
            <li class="cart-item">
              <div class="cart-item-details">
                <span class="cart-item-name">
                  <%= link_to item[:product].name, item[:product]&.persisted? ? carti_path(item[:product]) : root_path, class: "product-link", data: { turbo: false } %>
                </span>
                
                <!-- Counter pentru cantitate -->
                <div class="quantity-counter">
                  <button type="button" class="qty-btn qty-minus" data-product-id="<%= item[:product].id %>">−</button>
                  <%= number_field_tag "quantities[#{item[:product].id}]", 
                      item[:quantity], 
                      min: 1, 
                      class: "qty-input",
                      data: { product_id: item[:product].id } %>
                  <button type="button" class="qty-btn qty-plus" data-product-id="<%= item[:product].id %>">+</button>
                </div>
                
                <span class="cart-item-price">
                  x <%= number_to_currency(item[:product].price, unit: "lei", format: "%n %u") %>
                </span>
                <span class="cart-item-subtotal">
                  = <%= number_to_currency(item[:subtotal], unit: "lei", format: "%n %u") %>
                </span>
              </div>
              <button type="button" 
                      class="btn btn-danger cart-item-delete" 
                      data-product-id="<%= item[:product].id %>"
                      data-remove-product>X</button>
            </li>
          <% end %>
        </ul>
        
        <!-- Butonul Actualizează Coșul mutat cât mai la dreapta -->
        <div class="update-cart-container">
          <%= submit_tag "ACTUALIZEAZĂ COȘUL", class: "btn btn-update" %>
        </div>
      </section>
    <% end %>
  <% else %>
    <p class="empty-cart">Coșul este gol.</p>
  <% end %>

  <!-- Sumarul coșului -->
  <section class="cart-summary">
    <p><strong>Subtotal:</strong> <%= number_to_currency(@subtotal, unit: "lei", format: "%n %u") %></p>
    <% if @discount.positive? %>
      <p><strong>Reducere:</strong> -<%= number_to_currency(@discount, unit: "lei", format: "%n %u") %></p>
    <% end %>
    <% if @shipping_cost.positive? %>
      <p><strong>Transport:</strong> <%= number_to_currency(@shipping_cost, unit: "lei", format: "%n %u") %></p>
    <% elsif @has_physical %>
      <p><strong>Transport:</strong> <span class="free-shipping">Gratuit (comandă peste 200 lei)</span></p>
    <% end %>
    <p><strong>Total de plată:</strong> <%= number_to_currency(@total, unit: "lei", format: "%n %u") %></p>
  </section>

  <!-- Secțiunea pentru aplicarea cuponului -->
  <section class="coupon-section">
    <h3>Aplică un cupon de reducere</h3>
    <%= form_with url: apply_coupon_path, method: :post, local: true, class: "coupon-form" do |f| %>
      <div class="form-group">
        <%= f.label :code, "Cod cupon:", class: "form-label" %>
        <%= f.text_field :code, required: true, class: "form-input", placeholder: "Introdu codul" %>
        <%= f.submit "Aplică cuponul", class: "btn btn-success" %>
      </div>
    <% end %>
  </section>

  <!-- Mesaj pentru cupon aplicat -->
  <% if session[:applied_coupon] && @discount.positive? %>
    <div class="coupon-message">
      <p>
        ✅ Cupon aplicat: <strong><%= session[:applied_coupon]["code"] %></strong> –
        reducere
        <% if session[:applied_coupon]["discount_type"] == "percentage" %>
          <%= session[:applied_coupon]["discount_value"] %>%
        <% else %>
          <%= number_to_currency(@discount, unit: "lei", format: "%n %u") %>
        <% end %>
        (<%= number_to_currency(@discount, unit: "lei", format: "%n %u") %>)
      </p>
      <%= button_to "Șterge cupon", remove_coupon_path, method: :post, class: "btn btn-danger" %>
    </div>
  <% end %>

  <!-- Butoane pentru continuarea cumpărăturilor și finalizarea comenzii -->
  <% if @cart_items.any? %>
    <div class="checkout-container">
      <%= link_to "Continuă cumpărăturile", request.referer || products_path, class: "btn btn-primary continue-shopping-btn" %>
      <%= link_to "Finalizează comanda", new_order_path, class: "btn btn-primary checkout-btn" %>
    </div>
  <% end %>
</div>

<style>
/* ----------- CART PAGE STYLING ----------- */
.cart-container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 25px;
    background: white;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
    margin-top: 20px;
    margin-bottom: 40px;
}

.cart-container h1 {
    font-size: 24px;
    font-weight: bold;
    text-align: center;
    color: #8b0000;
    margin-bottom: 20px;
    padding-top: 20px;
}

.cart-container .coupon-section h3 {
    font-size: 18px;
    color: #8b0000;
    margin-bottom: 15px;
    text-align: center;
}

.cart-container .coupon-form {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    margin-bottom: 20px;
}

.cart-container .form-group {
    display: flex;
    align-items: center;
    gap: 10px;
}

.cart-container .form-label {
    font-size: 14px;
    color: #333;
    font-weight: bold;
}

.cart-container .form-input {
    padding: 8px;
    font-size: 14px;
    border: 1px solid #8b0000;
    border-radius: 5px;
    outline: none;
    width: 200px;
}

.cart-container .btn-success {
    background: #28a745;
    border: 1px solid #28a745;
    color: white;
    padding: 8px 16px;
    border-radius: 5px;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    transition: background 0.3s ease-in-out, border-color 0.3s ease-in-out;
}

.cart-container .btn-success:hover {
    background: #218838;
    border-color: #218838;
}

.cart-container .coupon-message {
    text-align: center;
    margin-bottom: 20px;
}

.cart-container .coupon-message p {
    font-size: 14px;
    color: #28a745;
    display: inline-block;
    margin-right: 10px;
}

.cart-container .coupon-message p strong {
    color: #8b0000;
}

.cart-container .btn-danger {
    background: #6c757d;
    border: 1px solid #6c757d;
    color: white;
    padding: 4px 8px;
    border-radius: 5px;
    font-size: 11px;
    font-weight: normal;
    cursor: pointer;
    transition: background 0.3s ease-in-out, border-color 0.3s ease-in-out;
}

.cart-container .btn-danger:hover {
    background: #5a6268;
    border-color: #5a6268;
}

.cart-container .cart-item-delete {
    position: static;
    display: inline-block;
    visibility: visible;
    opacity: 1;
    min-width: 30px;
    margin-left: 8px;
    padding: 4px 8px;
    font-size: 11px;
    align-self: center;
    line-height: 1.2;
}

.cart-container .btn-subtle {
    background: #adb5bd;
    border: 1px solid #adb5bd;
    color: #333;
    padding: 6px 12px;
    border-radius: 5px;
    font-size: 12px;
    font-weight: normal;
    cursor: pointer;
    transition: background 0.3s ease-in-out, border-color 0.3s ease-in-out;
}

.cart-container .btn-subtle:hover {
    background: #8f9aa3;
    border-color: #8f9aa3;
    color: #333;
}

.cart-container .btn-update {
    background: #8b0000;
    border: 1px solid #8b0000;
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    text-transform: uppercase;
    transition: background 0.3s ease-in-out, border-color 0.3s ease-in-out;
}

.cart-container .btn-update:hover {
    background: #6d0000;
    border-color: #6d0000;
}

.cart-container .update-cart-container {
    display: flex;
    justify-content: flex-end;
    margin-top: 10px;
    margin-left: auto;
    width: 100px;
    margin-right: 8px; /* Potrivește cu margin-left al butonului X */
}

.cart-container .cart-items {
    margin: 20px 0;
}

.cart-container .cart-item-list {
    list-style: none;
    padding: 0;
}

.cart-container .cart-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    border-bottom: 1px solid #ddd;
    font-size: 14px;
    color: #333;
    position: relative;
}

.cart-container .cart-item-details {
    display: flex;
    flex-wrap: wrap;
    flex: 1;
    gap: 10px;
    align-items: center;
}

.cart-container .cart-item-name {
    font-size: 15px;
    font-weight: bold;
    color: #8b0000;
    flex: 1 1 200px;
}

.cart-container .product-link {
    color: #8b0000;
    text-decoration: none;
    transition: text-decoration 0.3s ease-in-out;
}

.cart-container .product-link:hover {
    text-decoration: underline;
}

.cart-container .quantity-counter {
    display: flex;
    align-items: center;
    gap: 5px;
    min-width: 120px;
}

.cart-container .qty-btn {
    background: #8b0000;
    border: 1px solid #8b0000;
    color: white;
    width: 28px;
    height: 28px;
    border-radius: 4px;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.3s ease-in-out;
}

.cart-container .qty-btn:hover {
    background: #6d0000;
}

.cart-container .qty-input {
    width: 50px;
    text-align: center;
    border: 1px solid #8b0000;
    border-radius: 4px;
    padding: 4px;
    font-size: 14px;
    font-weight: bold;
}

.cart-container .qty-input:focus {
    outline: 2px solid #8b0000;
}

.cart-container .cart-item-price {
    font-size: 14px;
    color: #333;
    min-width: 80px;
}

.cart-container .cart-item-subtotal {
    font-size: 14px;
    font-weight: bold;
    color: #8b0000;
    min-width: 80px;
}

.cart-container .cart-summary {
    text-align: right;
    margin-top: 20px;
    padding: 15px;
    border-top: 1px solid #8b0000;
}

.cart-container .cart-summary p {
    font-size: 16px;
    color: #333;
    margin: 5px 0;
}

.cart-container .cart-summary p strong {
    color: #8b0000;
}

.cart-container .cart-summary .free-shipping {
    color: #28a745;
}

.cart-container .empty-cart {
    text-align: center;
    font-size: 16px;
    color: #555;
    margin: 20px 0;
}

.cart-container .checkout-container {
    display: flex;
    justify-content: flex-end;
    margin-top: 20px;
    gap: 10px;
    flex-wrap: wrap;
}

.cart-container .btn-primary {
    background: #ffa500;
    border: 1px solid #ffa500;
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    font-size: 14px;
    font-weight: bold;
    text-decoration: none;
    text-transform: uppercase;
    transition: background 0.3s ease-in-out, border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    width: max-content;
}

.cart-container .btn-primary:hover {
    background: #e69500;
    border-color: #e69500;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Responsive Design */
@media (max-width: 768px) {
    .cart-container {
        padding: 15px;
    }

    .cart-container h1 {
        font-size: 20px;
    }

    .cart-container .coupon-section h3 {
        font-size: 16px;
    }

    .cart-container .coupon-form {
        flex-direction: column;
        gap: 15px;
    }

    .cart-container .form-input {
        width: 100%;
    }

    .cart-container .cart-item {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
    }

    .cart-container .cart-item-details {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
        width: 100%;
    }

    .cart-container .cart-item-name {
        font-size: 14px;
        flex: 1 1 100%;
    }

    .cart-container .quantity-counter {
        min-width: 100%;
        justify-content: flex-start;
    }

    .cart-container .cart-item-price {
        font-size: 13px;
    }

    .cart-container .cart-item-subtotal {
        font-size: 13px;
    }

    .cart-container .cart-item .cart-item-delete {
        width: 100%;
        margin-left: 0;
        text-align: center;
        min-width: unset;
    }

    .cart-container .update-cart-container {
        flex-direction: column;
        align-items: center;
        padding-right: 0; /* Elimină padding-ul pe ecrane mici */
    }

    .cart-container .btn-update {
        width: 100%;
    }

    .cart-container .cart-summary {
        text-align: center;
    }

    .cart-container .checkout-container {
        justify-content: center;
        flex-direction: column;
        gap: 15px;
    }

    .cart-container .btn-primary {
        width: 100%;
        text-align: center;
    }
}

@media (max-width: 480px) {
    .cart-container {
        padding: 10px;
    }

    .cart-container h1 {
        font-size: 18px;
    }

    .cart-container .coupon-section h3 {
        font-size: 14px;
    }

    .cart-container .cart-summary p {
        font-size: 14px;
    }

    .cart-container .cart-item {
        font-size: 12px;
    }

    .cart-container .btn-success,
    .cart-container .btn-danger,
    .cart-container .btn-update,
    .cart-container .btn-primary {
        width: 100%;
        text-align: center;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('=== CART SCRIPT START ===');

  // Funcționalitate pentru butoanele +/-
  const qtyMinusButtons = document.querySelectorAll('.qty-minus');
  const qtyPlusButtons = document.querySelectorAll('.qty-plus');

  qtyMinusButtons.forEach((btn, index) => {
    const newButton = btn.cloneNode(true);
    btn.parentNode.replaceChild(newButton, btn);
    console.log(`Minus Button ${index}:`, newButton, 'Product ID:', newButton.dataset.productId);

    newButton.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();

      const productId = this.dataset.productId;
      const input = document.querySelector(`input[data-product-id="${productId}"]`);
      const currentValue = parseInt(input.value) || 1;
      console.log(`Minus clicked for Product ID ${productId}, Current Value: ${currentValue}`);
      if (currentValue > 1) {
        input.value = currentValue - 1;
        console.log(`New Value: ${input.value}`);
      }
    });
  });

  qtyPlusButtons.forEach((btn, index) => {
    const newButton = btn.cloneNode(true);
    btn.parentNode.replaceChild(newButton, btn);
    console.log(`Plus Button ${index}:`, newButton, 'Product ID:', newButton.dataset.productId);

    newButton.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();

      const productId = this.dataset.productId;
      const input = document.querySelector(`input[data-product-id="${productId}"]`);
      const currentValue = parseInt(input.value) || 1;
      console.log(`Plus clicked for Product ID ${productId}, Current Value: ${currentValue}`);
      input.value = currentValue + 1;
      console.log(`New Value: ${input.value}`);
    });
  });

  // Submit cu AJAX pentru actualizarea coșului
  const form = document.querySelector('.cart-form');
  if (form) {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(this);
      const csrfToken = document.querySelector('meta[name="csrf-token"]').content;

      fetch(this.action, {
        method: 'POST',
        headers: {
          'X-CSRF-Token': csrfToken,
          'Accept': 'application/json'
        },
        body: formData,
        credentials: 'same-origin'
      })
      .then(response => {
        if (response.ok) {
          window.location.reload();
        } else {
          alert('A apărut o eroare. Vă rugăm încercați din nou.');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('A apărut o eroare. Vă rugăm încercați din nou.');
      });
    });
  }

  // Funcționalitate pentru ștergere produs cu AJAX fără confirmare
  console.log('Initializing remove buttons...');
  const removeButtons = document.querySelectorAll('[data-remove-product]');
  console.log('Found remove buttons:', removeButtons.length);

  removeButtons.forEach((btn, index) => {
    const newButton = btn.cloneNode(true);
    btn.parentNode.replaceChild(newButton, btn);
    newButton.removeAttribute('data-confirm');
    console.log(`Remove Button ${index}:`, newButton, 'Product ID:', newButton.dataset.productId);

    newButton.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();

      const productId = this.dataset.productId;
      console.log('=== CLICK PE X ===');
      console.log('Product ID:', productId);
      console.log('Button:', this);

      const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
      console.log('CSRF Token:', csrfToken);
      console.log('Trimit request pentru ștergere produs...');

      fetch('/cart/remove', {
        method: 'POST',
        headers: {
          'X-CSRF-Token': csrfToken,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ product_id: productId }),
        credentials: 'same-origin'
      })
      .then(response => {
        console.log('Remove Response status:', response.status);
        console.log('Remove Response ok:', response.ok);
        if (response.ok) {
          window.location.reload();
        } else {
          alert('A apărut o eroare la ștergerea produsului. Vă rugăm încercați din nou.');
        }
      })
      .catch(error => {
        console.error('Remove Error:', error);
        alert('A apărut o eroare la ștergerea produsului. Vă rugăm încercați din nou.');
      });
    });
  });
});
</script>